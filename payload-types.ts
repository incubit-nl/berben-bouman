/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    pages: Page;
    faq: Faq;
    pricing: Pricing;
    locations: Location;
    testimonials: Testimonial;
    settings: Setting;
    'terms-and-conditions': TermsAndCondition;
    privacy: Privacy;
    treatments: Treatment;
    'team-members': TeamMember;
    'practice-info': PracticeInfo;
    'contact-info': ContactInfo;
    alerts: Alert;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    faq: FaqSelect<false> | FaqSelect<true>;
    pricing: PricingSelect<false> | PricingSelect<true>;
    locations: LocationsSelect<false> | LocationsSelect<true>;
    testimonials: TestimonialsSelect<false> | TestimonialsSelect<true>;
    settings: SettingsSelect<false> | SettingsSelect<true>;
    'terms-and-conditions': TermsAndConditionsSelect<false> | TermsAndConditionsSelect<true>;
    privacy: PrivacySelect<false> | PrivacySelect<true>;
    treatments: TreatmentsSelect<false> | TreatmentsSelect<true>;
    'team-members': TeamMembersSelect<false> | TeamMembersSelect<true>;
    'practice-info': PracticeInfoSelect<false> | PracticeInfoSelect<true>;
    'contact-info': ContactInfoSelect<false> | ContactInfoSelect<true>;
    alerts: AlertsSelect<false> | AlertsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    'treatment-categories': TreatmentCategory;
  };
  globalsSelect: {
    'treatment-categories': TreatmentCategoriesSelect<false> | TreatmentCategoriesSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  title: string;
  /**
   * This is the URL-friendly identifier for the page (e.g., "over-ons" for a page at /over-ons)
   */
  slug: string;
  pageType: 'home' | 'practice' | 'treatments' | 'contact' | 'other';
  /**
   * If this is a subpage, select the parent page
   */
  parentPage?: (string | null) | Page;
  /**
   * Title for SEO purposes. If left blank, the regular title will be used.
   */
  metaTitle?: string | null;
  /**
   * Description for SEO purposes.
   */
  metaDescription?: string | null;
  hero?: {
    heroImage?: (string | null) | Media;
    heroTitle?: string | null;
    heroContent?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
  };
  layout?:
    | (
        | {
            content: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'content';
          }
        | {
            image: string | Media;
            text: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            imagePosition?: ('left' | 'right') | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'imageText';
          }
        | {
            title: string;
            text?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            buttonText?: string | null;
            buttonLink?: string | null;
            backgroundColor?: ('primary' | 'secondary' | 'light') | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'callToAction';
          }
      )[]
    | null;
  /**
   * Should this page be shown in the main navigation?
   */
  showInNavigation?: boolean | null;
  /**
   * Should this page be shown in the footer navigation?
   */
  showInFooter?: boolean | null;
  status: 'draft' | 'published';
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faq".
 */
export interface Faq {
  id: string;
  question: string;
  answer: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  category: 'general' | 'classes' | 'membership' | 'facilities';
  /**
   * Enable this to show this FAQ on the homepage
   */
  homepage?: boolean | null;
  /**
   * Used to control the order of FAQs
   */
  order: number;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pricing".
 */
export interface Pricing {
  id: string;
  name: string;
  /**
   * A detailed description of what this pricing plan includes
   */
  description: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  price: number;
  period: 'per_month' | 'per_year' | 'one_time';
  features?:
    | {
        feature: string;
        id?: string | null;
      }[]
    | null;
  highlight?: boolean | null;
  /**
   * Used to control the order of pricing plans
   */
  order: number;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "locations".
 */
export interface Location {
  id: string;
  name: string;
  address: {
    street: string;
    city: string;
    postalCode: string;
  };
  contact: {
    email: string;
    phone: string;
  };
  openingHours?:
    | {
        day: 'monday' | 'tuesday' | 'wednesday' | 'thursday' | 'friday' | 'saturday' | 'sunday';
        openTime: string;
        closeTime: string;
        id?: string | null;
      }[]
    | null;
  image: string | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonials".
 */
export interface Testimonial {
  id: string;
  name: string;
  /**
   * e.g., "Yoga Student", "Workshop Participant"
   */
  role?: string | null;
  content: string;
  rating: number;
  image?: (string | null) | Media;
  featured?: boolean | null;
  order: number;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "settings".
 */
export interface Setting {
  id: string;
  name: string;
  slug: string;
  /**
   * Important announcement to display at the top of the homepage
   */
  importantAnnouncement?: {
    /**
     * Enable or disable the announcement
     */
    isActive?: boolean | null;
    /**
     * Title of the announcement (e.g., "BELANGRIJK !!")
     */
    title?: string | null;
    /**
     * Content of the announcement
     */
    content?: string | null;
    /**
     * Background color of the announcement banner
     */
    backgroundColor?: ('accent' | 'primary' | 'secondary' | 'warning') | null;
  };
  /**
   * Social media links for the website
   */
  socialMedia?: {
    /**
     * Facebook URL
     */
    facebook?: string | null;
    /**
     * Instagram URL
     */
    instagram?: string | null;
    /**
     * LinkedIn URL
     */
    linkedin?: string | null;
  };
  contact: {
    email: string;
    phone: string;
    address: string;
  };
  /**
   * Default SEO settings
   */
  seo?: {
    defaultTitle?: string | null;
    defaultDescription?: string | null;
    defaultKeywords?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * Algemene voorwaarden van title
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "terms-and-conditions".
 */
export interface TermsAndCondition {
  id: string;
  title: string;
  /**
   * Datum van laatste update
   */
  lastUpdated: string;
  /**
   * De inhoud van de algemene voorwaarden
   */
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * SEO titel (optioneel)
   */
  metaTitle?: string | null;
  /**
   * SEO beschrijving (optioneel)
   */
  metaDescription?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * Privacybeleid van title
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "privacy".
 */
export interface Privacy {
  id: string;
  title: string;
  /**
   * Datum van laatste update
   */
  lastUpdated: string;
  /**
   * De inhoud van het privacybeleid
   */
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * SEO titel (optioneel)
   */
  metaTitle?: string | null;
  /**
   * SEO beschrijving (optioneel)
   */
  metaDescription?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "treatments".
 */
export interface Treatment {
  id: string;
  title: string;
  /**
   * This is the URL-friendly identifier for the treatment (e.g., "vullingen" for a page at /behandelingen/vullingen)
   */
  slug: string;
  /**
   * Choose a category for this treatment. Options are loaded from the global treatment categories. If not seeing updated options, try refreshing the page.
   */
  category:
    | 'preventie'
    | 'diagnostiek'
    | 'restauratief'
    | 'endodontologie'
    | 'prothetiek'
    | 'implantologie'
    | 'orthodontie'
    | 'overig';
  featuredImage?: (string | null) | Media;
  shortDescription: string;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Title for SEO purposes. If left blank, the regular title will be used.
   */
  metaTitle?: string | null;
  /**
   * Description for SEO purposes. If left blank, the short description will be used.
   */
  metaDescription?: string | null;
  /**
   * Order in which to display this treatment in listings (lower numbers appear first).
   */
  displayOrder?: number | null;
  status: 'draft' | 'published';
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "team-members".
 */
export interface TeamMember {
  id: string;
  name: string;
  /**
   * This is the URL-friendly identifier for the team member
   */
  slug: string;
  /**
   * Job title or role (e.g., "Tandarts", "Mondhygiënist")
   */
  role: string;
  photo: string | Media;
  bio: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Areas of specialization or expertise
   */
  specializations?:
    | {
        specialization: string;
        id?: string | null;
      }[]
    | null;
  education?:
    | {
        degree: string;
        institution: string;
        year?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Days when this team member is available at the practice
   */
  workDays?: ('monday' | 'tuesday' | 'wednesday' | 'thursday' | 'friday')[] | null;
  /**
   * Order in which to display this team member (lower numbers appear first)
   */
  displayOrder?: number | null;
  /**
   * Is this team member currently active?
   */
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "practice-info".
 */
export interface PracticeInfo {
  id: string;
  /**
   * This is just a label for the CMS and won't be displayed on the website.
   */
  title: string;
  /**
   * This is the URL-friendly identifier for the page (e.g., "praktijkregels")
   */
  slug: string;
  infoType: 'tour' | 'rules' | 'budget' | 'pricing' | 'invoices' | 'other';
  /**
   * General description of the practice
   */
  description?: string | null;
  whyUsSection?: {
    whyUsTitle?: string | null;
    whyUsDescription?: string | null;
  };
  qualitySection?: {
    qualityTitle?: string | null;
    qualityDescription?: string | null;
    qualityImage?: (string | null) | Media;
  };
  /**
   * Features or benefits of the practice
   */
  features?:
    | {
        title: string;
        description?: string | null;
        icon?: ('sparkles' | 'heart' | 'clock' | 'users' | 'shield' | 'check-circle') | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Benefits or key points about the practice to highlight
   */
  benefits?:
    | {
        text: string;
        id?: string | null;
      }[]
    | null;
  mission?: {
    missionStatement?: string | null;
    visionStatement?: string | null;
  };
  /**
   * History of the practice
   */
  history?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  values?:
    | {
        title: string;
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  featuredImage?: (string | null) | Media;
  /**
   * Image gallery (especially useful for Praktijkrondleiding)
   */
  gallery?:
    | {
        image: string | Media;
        caption?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Attachments like price lists, forms, etc.
   */
  attachments?:
    | {
        file: string | Media;
        title: string;
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Title for SEO purposes. If left blank, the regular title will be used.
   */
  metaTitle?: string | null;
  /**
   * Description for SEO purposes.
   */
  metaDescription?: string | null;
  /**
   * Order in which to display this info page in listings (lower numbers appear first).
   */
  displayOrder?: number | null;
  status: 'draft' | 'published';
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact-info".
 */
export interface ContactInfo {
  id: string;
  /**
   * This is just a label for the CMS and won't be displayed on the website.
   */
  title: string;
  address: {
    street: string;
    postalCode: string;
    city: string;
    area?: string | null;
  };
  contactDetails: {
    phone: string;
    email: string;
    kvkNumber?: string | null;
    agbCode?: string | null;
  };
  openingHours?:
    | {
        day: 'monday' | 'tuesday' | 'wednesday' | 'thursday' | 'friday' | 'saturday' | 'sunday';
        /**
         * Format: HH:MM (e.g., 08:00)
         */
        openTime: string;
        /**
         * Format: HH:MM (e.g., 17:00)
         */
        closeTime: string;
        isClosed?: boolean | null;
        id?: string | null;
      }[]
    | null;
  receptionHours?:
    | {
        day: 'monday' | 'tuesday' | 'wednesday' | 'thursday' | 'friday' | 'saturday' | 'sunday';
        /**
         * Format: HH:MM (e.g., 08:30)
         */
        morningOpen?: string | null;
        /**
         * Format: HH:MM (e.g., 12:00)
         */
        morningClose?: string | null;
        /**
         * Format: HH:MM (e.g., 13:00)
         */
        afternoonOpen?: string | null;
        /**
         * Format: HH:MM (e.g., 16:30)
         */
        afternoonClose?: string | null;
        isClosed?: boolean | null;
        id?: string | null;
      }[]
    | null;
  emergencyInfo?: {
    phone?: string | null;
    alternatePhone?: string | null;
    instructions?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
  };
  closedDays?:
    | {
        /**
         * Name of the holiday or closed day (e.g., "Goedevrijdag")
         */
        name: string;
        /**
         * Format: DD-MM-YYYY or description (e.g., "18-04-2025" or "Vrijdag 18 april 2025")
         */
        date: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Google Maps or other map embed code
   */
  mapEmbed?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "alerts".
 */
export interface Alert {
  id: string;
  /**
   * Internal name for this alert (not displayed to users)
   */
  title: string;
  /**
   * Toggle to show or hide this alert
   */
  isActive?: boolean | null;
  /**
   * Type of alert which determines the color scheme
   */
  alertType: 'info' | 'warning' | 'error' | 'success';
  /**
   * Alert message content
   */
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Where this alert should appear
   */
  position?: ('global' | 'home') | null;
  /**
   * Allow users to dismiss this alert
   */
  dismissible?: boolean | null;
  /**
   * Optional: Date when this alert should automatically deactivate
   */
  expiresAt?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'pages';
        value: string | Page;
      } | null)
    | ({
        relationTo: 'faq';
        value: string | Faq;
      } | null)
    | ({
        relationTo: 'pricing';
        value: string | Pricing;
      } | null)
    | ({
        relationTo: 'locations';
        value: string | Location;
      } | null)
    | ({
        relationTo: 'testimonials';
        value: string | Testimonial;
      } | null)
    | ({
        relationTo: 'settings';
        value: string | Setting;
      } | null)
    | ({
        relationTo: 'terms-and-conditions';
        value: string | TermsAndCondition;
      } | null)
    | ({
        relationTo: 'privacy';
        value: string | Privacy;
      } | null)
    | ({
        relationTo: 'treatments';
        value: string | Treatment;
      } | null)
    | ({
        relationTo: 'team-members';
        value: string | TeamMember;
      } | null)
    | ({
        relationTo: 'practice-info';
        value: string | PracticeInfo;
      } | null)
    | ({
        relationTo: 'contact-info';
        value: string | ContactInfo;
      } | null)
    | ({
        relationTo: 'alerts';
        value: string | Alert;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  pageType?: T;
  parentPage?: T;
  metaTitle?: T;
  metaDescription?: T;
  hero?:
    | T
    | {
        heroImage?: T;
        heroTitle?: T;
        heroContent?: T;
      };
  layout?:
    | T
    | {
        content?:
          | T
          | {
              content?: T;
              id?: T;
              blockName?: T;
            };
        imageText?:
          | T
          | {
              image?: T;
              text?: T;
              imagePosition?: T;
              id?: T;
              blockName?: T;
            };
        callToAction?:
          | T
          | {
              title?: T;
              text?: T;
              buttonText?: T;
              buttonLink?: T;
              backgroundColor?: T;
              id?: T;
              blockName?: T;
            };
      };
  showInNavigation?: T;
  showInFooter?: T;
  status?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faq_select".
 */
export interface FaqSelect<T extends boolean = true> {
  question?: T;
  answer?: T;
  category?: T;
  homepage?: T;
  order?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pricing_select".
 */
export interface PricingSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  price?: T;
  period?: T;
  features?:
    | T
    | {
        feature?: T;
        id?: T;
      };
  highlight?: T;
  order?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "locations_select".
 */
export interface LocationsSelect<T extends boolean = true> {
  name?: T;
  address?:
    | T
    | {
        street?: T;
        city?: T;
        postalCode?: T;
      };
  contact?:
    | T
    | {
        email?: T;
        phone?: T;
      };
  openingHours?:
    | T
    | {
        day?: T;
        openTime?: T;
        closeTime?: T;
        id?: T;
      };
  image?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonials_select".
 */
export interface TestimonialsSelect<T extends boolean = true> {
  name?: T;
  role?: T;
  content?: T;
  rating?: T;
  image?: T;
  featured?: T;
  order?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "settings_select".
 */
export interface SettingsSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  importantAnnouncement?:
    | T
    | {
        isActive?: T;
        title?: T;
        content?: T;
        backgroundColor?: T;
      };
  socialMedia?:
    | T
    | {
        facebook?: T;
        instagram?: T;
        linkedin?: T;
      };
  contact?:
    | T
    | {
        email?: T;
        phone?: T;
        address?: T;
      };
  seo?:
    | T
    | {
        defaultTitle?: T;
        defaultDescription?: T;
        defaultKeywords?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "terms-and-conditions_select".
 */
export interface TermsAndConditionsSelect<T extends boolean = true> {
  title?: T;
  lastUpdated?: T;
  content?: T;
  metaTitle?: T;
  metaDescription?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "privacy_select".
 */
export interface PrivacySelect<T extends boolean = true> {
  title?: T;
  lastUpdated?: T;
  content?: T;
  metaTitle?: T;
  metaDescription?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "treatments_select".
 */
export interface TreatmentsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  category?: T;
  featuredImage?: T;
  shortDescription?: T;
  content?: T;
  metaTitle?: T;
  metaDescription?: T;
  displayOrder?: T;
  status?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "team-members_select".
 */
export interface TeamMembersSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  role?: T;
  photo?: T;
  bio?: T;
  specializations?:
    | T
    | {
        specialization?: T;
        id?: T;
      };
  education?:
    | T
    | {
        degree?: T;
        institution?: T;
        year?: T;
        id?: T;
      };
  workDays?: T;
  displayOrder?: T;
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "practice-info_select".
 */
export interface PracticeInfoSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  infoType?: T;
  description?: T;
  whyUsSection?:
    | T
    | {
        whyUsTitle?: T;
        whyUsDescription?: T;
      };
  qualitySection?:
    | T
    | {
        qualityTitle?: T;
        qualityDescription?: T;
        qualityImage?: T;
      };
  features?:
    | T
    | {
        title?: T;
        description?: T;
        icon?: T;
        id?: T;
      };
  benefits?:
    | T
    | {
        text?: T;
        id?: T;
      };
  mission?:
    | T
    | {
        missionStatement?: T;
        visionStatement?: T;
      };
  history?: T;
  values?:
    | T
    | {
        title?: T;
        description?: T;
        id?: T;
      };
  featuredImage?: T;
  gallery?:
    | T
    | {
        image?: T;
        caption?: T;
        id?: T;
      };
  attachments?:
    | T
    | {
        file?: T;
        title?: T;
        description?: T;
        id?: T;
      };
  metaTitle?: T;
  metaDescription?: T;
  displayOrder?: T;
  status?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact-info_select".
 */
export interface ContactInfoSelect<T extends boolean = true> {
  title?: T;
  address?:
    | T
    | {
        street?: T;
        postalCode?: T;
        city?: T;
        area?: T;
      };
  contactDetails?:
    | T
    | {
        phone?: T;
        email?: T;
        kvkNumber?: T;
        agbCode?: T;
      };
  openingHours?:
    | T
    | {
        day?: T;
        openTime?: T;
        closeTime?: T;
        isClosed?: T;
        id?: T;
      };
  receptionHours?:
    | T
    | {
        day?: T;
        morningOpen?: T;
        morningClose?: T;
        afternoonOpen?: T;
        afternoonClose?: T;
        isClosed?: T;
        id?: T;
      };
  emergencyInfo?:
    | T
    | {
        phone?: T;
        alternatePhone?: T;
        instructions?: T;
      };
  closedDays?:
    | T
    | {
        name?: T;
        date?: T;
        id?: T;
      };
  mapEmbed?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "alerts_select".
 */
export interface AlertsSelect<T extends boolean = true> {
  title?: T;
  isActive?: T;
  alertType?: T;
  content?: T;
  position?: T;
  dismissible?: T;
  expiresAt?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * Manage categories for dental treatments. Note: After making changes, you need to restart the server for the changes to be reflected in the treatment editor.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "treatment-categories".
 */
export interface TreatmentCategory {
  id: string;
  /**
   * Define the categories available for dental treatments
   */
  categories: {
    /**
     * Unique identifier (e.g., "preventie")
     */
    value: string;
    /**
     * Display name (e.g., "Preventie")
     */
    label: string;
    /**
     * Description of this category of treatments
     */
    description?: string | null;
    /**
     * Order in which to display this category (lower numbers appear first)
     */
    displayOrder?: number | null;
    id?: string | null;
  }[];
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "treatment-categories_select".
 */
export interface TreatmentCategoriesSelect<T extends boolean = true> {
  categories?:
    | T
    | {
        value?: T;
        label?: T;
        description?: T;
        displayOrder?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}